name: Frontend Build

on:
  push:
    branches: [ "feat/security" ]
  workflow_dispatch:

jobs:
  build:
    permissions:
      contents: read
      packages: write
      security-events: write

    runs-on: ubuntu-22.04

    steps:
      # Git Checkout
      - name: Checkout
        uses: actions/checkout@v3
        
      # Setup Node
      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: 19
          cache: 'npm'
      
      # Install Node Dependencies
      - name: Dependency
        run: npm ci
      
      # # Unit Test
      # - name: Unit Test
      #   run: npm test

      # Sonar Static Code Analysis
      - name: SonarCloud Analysis
        uses: actions/cache@v2
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - uses: SonarSource/sonarcloud-github-action@v1.8
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args:
            -Dsonar.projectKey=react-bp-microservice
            -Dsonar.organization=hypheni
            -Dsonar.javascript.lcov.reportPaths=./coverage/lcov.info

      # Synk Scan for Node Packages Vulnarability
      - name: Vulnerability Check with Synk
        uses: snyk/actions/node@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --sarif-file-output=snyk.sarif
                --severity-threshold=high
                # --dev
      - uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: snyk.sarif

      # Build Container Image
      - name: Image build
        run: |
          docker build . --file Dockerfile --tag bpcalc-frontend:${{ github.sha }}

      # Trivy Scan for Container Image Vulnarability
      - name: Trivy Vulnerability Scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'bpcalc-frontend:${{ github.sha }}'
          format: 'sarif'
          output: 'trivy-results.sarif'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'
      - uses: github/codeql-action/upload-sarif@v2
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'
      
      # GCP Auth
      - name: Google Auth
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GOOGLE_CREDENTIALS }}

      # Push to GCR
      - name: Push to GCR
        run: |-
          gcloud auth configure-docker
          docker tag bpcalc-frontend:${{ github.sha }} gcr.io/tudublin/bpcalc-frontend:${{ github.sha }}
          docker push gcr.io/tudublin/bpcalc-frontend:${{ github.sha }}